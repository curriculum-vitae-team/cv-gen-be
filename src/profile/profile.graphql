# Profile

type Profile {
  id: ID!
  created_at: String!
  first_name: String
  last_name: String
  full_name: String
  avatar: String
  skills: [SkillMastery!]!
  languages: [LanguageProficiency!]!
}

type Query {
  profile(userId: ID!): Profile!
}

input CreateProfileInput {
  first_name: String
  last_name: String
}

input UpdateProfileInput {
  userId: ID!
  first_name: String
  last_name: String
}

# Skills

input AddProfileSkillInput {
  userId: ID!
  name: String!
  category: String
  mastery: Mastery!
}

input UpdateProfileSkillInput {
  userId: ID!
  name: String!
  category: String
  mastery: Mastery!
}

input DeleteProfileSkillInput {
  userId: ID!
  name: String!
}

# Languages

input AddProfileLanguageInput {
  userId: ID!
  language_name: String!
  proficiency: String!
}

input UpdateProfileLanguageInput {
  userId: ID!
  language_name: String!
  proficiency: String!
}

input DeleteProfileLanguageInput {
  userId: ID!
  language_name: String!
}

# Avatar

input UploadAvatarInput {
  userId: ID!
  base64: String!
  size: Int!
  type: String!
}

input DeleteAvatarInput {
  userId: ID!
}

scalar Void

type Mutation {
  updateProfile(profile: UpdateProfileInput!): Profile!
  addProfileSkill(skill: AddProfileSkillInput!): Profile!
  updateProfileSkill(skill: UpdateProfileSkillInput!): Profile!
  deleteProfileSkill(skill: DeleteProfileSkillInput!): Profile!
  addProfileLanguage(language: AddProfileLanguageInput!): Profile!
  updateProfileLanguage(language: UpdateProfileLanguageInput!): Profile!
  deleteProfileLanguage(language: DeleteProfileLanguageInput!): Profile!
  uploadAvatar(avatar: UploadAvatarInput!): String!
  deleteAvatar(avatar: DeleteAvatarInput!): Void
}
